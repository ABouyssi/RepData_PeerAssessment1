unzip("~/activity.zip")
unzip(".\activity.zip")
unzip(".\\activity.zip")
read.csv(file = ".\\activity.csv", header = TRUE)
activity = read.csv(file = ".\\activity.csv", header = TRUE)
View(activity)
```{r,eval=FALSE}
View(activity)
source('C:/Users/Adrien Bouyssi/Desktop/Courses/Reproducible research/Peer_Assessment/RepData_PeerAssessment1/debugging.R')
activity %>%
group_by(date) %>%
summarize(avg_steps, mean(x = steps, na.rm = TRUE)) %>%
select(date, avg_steps)
activity %>%
group_by(date) %>%
summarize(avg_steps = mean(x = steps, na.rm = TRUE)) %>%
select(date, avg_steps)
activity %>%
group_by(interval) %>%
summarize(avg_steps = mean(x = steps, na.rm = TRUE)) %>%
select(interval, avg_steps)
to_plot = activity %>%
group_by(interval) %>%
summarize(avg_steps = mean(x = steps, na.rm = TRUE)) %>%
select(interval, avg_steps)
View(to_plot)
to_plot = as.data.frame(x = activity %>%
group_by(interval) %>%
summarize(avg_steps = mean(x = steps, na.rm = TRUE)) %>%
select(interval, avg_steps))
View(to_plot)
library(ggplot2)
to_plot = as.data.frame(x = activity %>%
group_by(date) %>%
summarize(sum_steps = sum(x = steps, na.rm = TRUE))
select(date, sum_steps))
p = ggplot()
install.packages(c("manipulate", "plyr"))
install.packages("ggplot2")
library(ggplot2)
to_plot = as.data.frame(x = activity %>%
group_by(date) %>%
summarize(sum_steps = sum(x = steps, na.rm = TRUE))
select(date, sum_steps))
to_plot = as.data.frame(x = activity %>%
group_by(date) %>%
summarize(sum_steps = sum(x = steps, na.rm = TRUE)) %>%
select(date, sum_steps))
View(to_plot)
p = ggplot(data = to_plot, )
p = ggplot(data = to_plot, aes(x = date, y = sum_steps))
+ geom_histogram()
p = ggplot(data = to_plot, aes(x = date)) #, y = sum_steps))
+ geom_histogram()
p = ggplot(data = to_plot, aes(x = date, y = sum_steps))
p = p + geom_histogram()
p
p = ggplot(data = to_plot, aes(x = date))
p = p + geom_histogram()
p
p = ggplot(data = activity, aes(x = date))
p = p + geom_histogram(binwidth=1)
p
p = ggplot(data = activity, aes(x = date))
p = p + geom_histogram(binwidth=1, stat = sum())
p
p = ggplot(data = activity, aes(x = date))
p = p + geom_histogram(binwidth=1, stat = sum)
p
p = ggplot(data = activity, aes(x = date))
p = p + geom_histogram(binwidth=1, stat = sum(steps, na.rm = TRUE))
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth=1)
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth=500)
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth=500)
p = p + labs(title = "Distribution of daily number of steps")
p = p + labs(xlab = "Total daily number of steps (bins of 500)")
p = p + labs(ylab = "Frequency (number of days)")
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth=500)
p = p + labs(title = "Distribution of daily number of steps")
p = p + labs(x = "Total daily number of steps (bins of 500)")
p = p + labs(y = "Frequency (number of days)")
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth=100)
p = p + labs(title = "Distribution of daily number of steps")
p = p + labs(x = "Total daily number of steps (bins of 500)")
p = p + labs(y = "Frequency (number of days)")
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth=1000)
p = p + labs(title = "Distribution of daily number of steps")
p = p + labs(x = "Total daily number of steps (bins of 500)")
p = p + labs(y = "Frequency (number of days)")
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth=1000)
p = p + labs(title = "Distribution of daily number of steps")
p = p + labs(x = "Total daily number of steps (bins of 1,000)")
p = p + labs(y = "Frequency (number of days)")
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth = 1000, color = "blue")
p = p + labs(title = "Distribution of daily number of steps")
p = p + labs(x = "Total daily number of steps (bins of 1,000 steps)")
p = p + labs(y = "Frequency (number of days)")
p
p = ggplot(data = to_plot, aes(x = sum_steps))
p = p + geom_histogram(binwidth = 1000, fill = "blue")
p = p + labs(title = "Distribution of daily number of steps")
p = p + labs(x = "Total daily number of steps (bins of 1,000 steps)")
p = p + labs(y = "Frequency (number of days)")
p
to_plot = as.data.frame(x = activity %>%
group_by(interval) %>%
summarize(avg_steps = mean(x = steps, na.rm = TRUE)) %>%
select(interval, avg_steps))
View(to_plot)
p = ggplot(data = to_plot, aes(x = interval))
p = p + geom_line(color = "red")
p = p + labs(title = "Average daily profile of number of steps")
p = p + labs(x = "1 day (segmented in 5 minute invervals)")
p = p + labs(y = "Average number of steps")
p
View(to_plot)
p = ggplot(data = to_plot, aes(x = interval))
p = p + geom_line(color = "red")
p
p = ggplot(data = to_plot, aes(x = interval, y = avg_steps))
p = p + geom_line(color = "red")
p = p + labs(title = "Average daily profile of number of steps")
p = p + labs(x = "1 day (segmented in 5 minute invervals)")
p = p + labs(y = "Average number of steps")
p
to_plot[to_plot$avg_steps == max(to_plot$avg_steps), 1]
to_plot[to_plot$avg_steps == max(to_plot$avg_steps), 1]/5
max(to_plot$avg_steps)
to_plot[to_plot$avg_steps == max(to_plot$avg_steps), 1]/60
time + to_plot[to_plot$avg_steps == max(to_plot$avg_steps), 1]*60
x = to_plot[to_plot$avg_steps == max(to_plot$avg_steps), 1]*60
Sys.setlocale(category = "LC_TIME", locale = "US")
x = to_plot[to_plot$avg_steps == max(to_plot$avg_steps), 1]*60
Sys.setlocale(category = "LC_TIME", locale = "US")
format(as.POSIXct('0001-01-01 00:00:00') + x, "%I:%M:%S %p")
activity %>%
summarize(missing_values = sum(is.na(steps)) %>%
select(missing_values)
activity %>%
summarize(missing_values = sum(is.na(steps))) %>%
select(missing_values)
activity %>%
mutate(missing_values = is.na(steps)) %>%
select(missing_values)
activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
#mutate(steps_imputed = if(missing_values == TRUE)) %>%
select(missing_values)
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * to_plot[x$interval, 2])
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * to_plot[interval, 2])
View(activity_imputed)
num_days = activity %>%
group_by(date) %>%
summarize(num_days = n()) %>%
select(num_days)
View(num_days)
num_days = activity %>%
distinct(date) %>%
summarize(num_days = n()) %>%
select(num_days)
View(num_days)
View(num_days)
17568 / 24 / 60 * 5
daily_profile = rep(to_plot, num_days)
daily_profile = rep(x = to_plot, times = num_days)
for (i in 1:num_days){
daily_profile = rbind(daily_profile,to_plot)
}
num_days = as.numeric(activity %>%
distinct(date) %>%
summarize(num_days = n()) %>%
select(num_days))
for (i in 1:num_days){
daily_profile = rbind(daily_profile,to_plot)
}
daily_profile = data.frame()
for (i in 1:num_days){
daily_profile = rbind(daily_profile,to_plot)
}
View(daily_profile)
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2])
View(activity_imputed)
tivity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2] + steps)
View(activity_imputed)
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2]) %>%
mutate(steps_final = steps_imputed + steps)
View(tivity_imputed)
View(activity_imputed)
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1)
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2])
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2]) %>%
#mutate(steps = steps_imputed + is.nsteps)
mutate(steps_final = steps_imputed + steps[is.na(steps)]
)
View(activity_imputed)
attach(activity)
steps[is.na(steps)]
s = steps[is.na(steps)]
is.na(steps)
s = activity[is.na(steps),1]
View(s)
s = activity[!is.na(steps) * steps + is.na(steps) * 0,1]
View(s)
s = !is.na(steps) * steps + is.na(steps) * 0
!is.na(steps) * steps
steps(is.na(steps)) = 0
steps[is.na(steps)] = 0
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2]) %>%
mutate(steps[is.na(steps)] = 0)
activity$steps_num = steps[is.na(steps)] = 0
View(activity)
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2]) %>%
mutate(steps_num = (steps[is.na(steps)] = 0))
View(activity_imputed)
View(daily_profile)
daily_profile = data.frame()
for (i in 1:num_days){
daily_profile = rbind(daily_profile,to_plot[,2])
}
View(daily_profile)
daily_profile = data.frame()
for (i in 1:num_days){
daily_profile = rbind(daily_profile,to_plot)
}
activity$steps_num = steps[is.na(steps)] = 0
activity_imputed = activity %>%
mutate(missing_values = is.na(steps) * 1) %>%
mutate(steps_imputed = missing_values * daily_profile[interval, 2]) %>%
#mutate(steps_num = (steps[is.na(steps)] = 0))
mutate(steps_final = steps_imputed + steps_num)
View(activity_imputed)
View(activity)
steps[is.na(steps)] = 0
View(activity)
activity$steps[is.na(steps)] = 0
View(activity)
for (i in 1:nrows(activity)){
attach(activity)
if(is.na(steps[i])){
steps_imputed[i] = daily_profile[interval[i],2]
}
else {steps_imputed[i] = steps[i]}
}
for (i in 1:nrow(activity)){
attach(activity)
if(is.na(steps[i])){
steps_imputed[i] = daily_profile[interval[i],2]
}
else {steps_imputed[i] = steps[i]}
}
activity$steps_imputed
activity$steps_imputed = as.vector()
activity$steps_imputed = activity$steps
activity$steps_imputed = activity$steps
for (i in 1:nrow(activity)){
attach(activity)
if(is.na(steps[i])){
steps_imputed[i] = daily_profile[interval[i],2]
}
}
